<h2>
  <%= link_to 'Add New +', new_post_path, class: 'header-menu' %>
  My Posts
</h2>
<ul>
<% @posts.each do |post| %>
<li>
<%= link_to post.title, post_path(post.id) %>
<span class="command_class">
<%= link_to 'Edit', edit_post_path(post.id), class: 'command'%>
<%= link_to 'x', 
post_path(post.id), 
method: :delete, 
class: 'command_x',
data: { confirm: 'Sure?'}%>
</span>
</li>
<% end %>
</ul>



<%# 以下、mapを表示するために必要 %>
<div id="target"></div>
<input type="text" id="keyword">
<button id="search">Search</button>
<script>
    function initMap() {
      'use strict';

      let target = document.getElementById('target');
      // let geocoder = new google.maps.Geocoder();
      let map;
      // let tokyo = {lat: 35.681167, lng: 139.767052};
      let service;
      // let infoWindow;
      let marker = [];
      let destination = [];
      let current;

      // geolocationが対応していないブラウザの場合はアラートを表示
      if (!navigator.geolocation) {
        alert('Geolocation not supported!');
        return;
      }

      // 現在地を中心に、マップを描画
      navigator.geolocation.getCurrentPosition(function(position) {
        current = {lat: position.coords.latitude, lng: position.coords.longitude};
        map = new google.maps.Map(target, {
          center: current,
          zoom: 15
        });

      // 現在地にマーカーを表示
      new google.maps.Marker({
        map: map,
	      position: current,
        icon: {
          url: 'assets/current.png',
          scaledSize: new google.maps.Size(25, 25)
        }
      });
          

        // 半径500m以内の検索結果にヒットした店舗を表示
        document.getElementById('search').addEventListener('click', function() {
        service = new google.maps.places.PlacesService(map);
        service.nearbySearch({
          location: current,
          radius: '1000',
          name: document.getElementById('keyword').value
        }, function(results, status){
          let i;
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (i = 0; i < results.length; i++) {
              destination[i] = results[i].geometry.location;
              marker[i] = new google.maps.Marker({
                map: map,
                position: destination[i],
                title: results[i].name,
                animation: google.maps.Animation.DROP
              });

              markerEvent(i); //マーカーをクリックした時のイベントを追加
            }
          } else {
            alert('Failed: ' + status);
            return;
          }
        });
      });
      }, function() {        
        alert('Geolocation failed!');
        return;
      });

      new google.maps.DirectionsRenderer().setMap(map);

      // マーカーをクリックした時に現在地からのルートを表示
      function markerEvent(i) {
        marker[i].addListener('click', function() {
          let request = {
            origin: current,
            destination: destination[i],
            travelMode: google.maps.TravelMode.WALKING
          };

          new google.maps.DirectionsService().route(request, function(result, status) {
            new google.maps.DirectionsRenderer().setDirections(result);
          });
        });
      }


    }
</script>